Index: templates/users/_terminate_employee_form.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- templates/users/_terminate_employee_form.html	(revision b73526c914f345ee3ce99d5a8675497e6f47a709)
+++ templates/users/_terminate_employee_form.html	(date 1558135295110)
@@ -41,8 +41,20 @@
             </fieldset>
             <div class="form-group">
                 <button class="btn btn-success" type="submit">SUBMIT</button>
-                <a class="btn btn-danger" href="{% url 'users:user-detail' employee.id %}">CANCEL</a>
+                <a class="btn btn-danger" href="{% url 'users:user-detail' employee.pk %}">CANCEL</a>
             </div>
         </form>
     </div>
-{% endblock content %}
\ No newline at end of file
+{% endblock content %}
+{% block scripts %}
+    <script>
+        $(function () {
+            $("#id_notice_date").datetimepicker({
+                format: 'Y-m-d',
+            });
+            $("#id_exit_date").datetimepicker({
+                format: 'Y-m-d',
+            });
+        });
+    </script>
+{% endblock scripts %}
\ No newline at end of file
Index: templates/users/_employee_birthday_list.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- templates/users/_employee_birthday_list.html	(revision b73526c914f345ee3ce99d5a8675497e6f47a709)
+++ templates/users/_employee_birthday_list.html	(date 1558135686564)
@@ -24,7 +24,7 @@
                 {% for employee in object_list %}
                     <tr>
                         <td>
-                            <a href="{% url 'users:user-detail' pk=employee.id %}">
+                            <a href="{% url 'users:user-detail' pk=employee.pk %}">
                                 {{ employee.user.get_full_name }}
                             </a>
                         </td>
Index: hr_system/settings.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- hr_system/settings.py	(revision b73526c914f345ee3ce99d5a8675497e6f47a709)
+++ hr_system/settings.py	(date 1558129068176)
@@ -22,7 +22,7 @@
 SECRET_KEY = '141b364869dd5b23831d1cad86b05342'
 
 # SECURITY WARNING: don't run with debug turned on in production!
-DEBUG = False
+DEBUG = True
 
 ALLOWED_HOSTS = ['*']
 
Index: hr_system/wsgi.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- hr_system/wsgi.py	(revision b73526c914f345ee3ce99d5a8675497e6f47a709)
+++ hr_system/wsgi.py	(date 1558129068273)
@@ -7,13 +7,17 @@
 https://docs.djangoproject.com/en/2.1/howto/deployment/wsgi/
 """
 
-import os, sys
-sys.path.append('C:/Users/administrator.SCIUGKLA/Bitnami Django Stack projects/hr_system')
-os.environ.setdefault("PYTHON_EGG_CACHE", "C:/Users/administrator.SCIUGKLA/Bitnami Django Stack projects/hr_system/egg_cache")
+import os
+import sys
+
+from django.core.wsgi import get_wsgi_application
+
+from hr_system import settings
+
+if not settings.DEBUG:
+    sys.path.append('C:/Users/administrator.SCIUGKLA/Bitnami Django Stack projects/hr_system')
+    os.environ.setdefault("PYTHON_EGG_CACHE", "C:/Users/administrator.SCIUGKLA/Bitnami Django Stack projects/hr_system/egg_cache")
 
-
-from django.core.wsgi import get_wsgi_application
-
 os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'hr_system.settings')
 
 application = get_wsgi_application()
Index: templates/users/_approved_employee_list.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- templates/users/_approved_employee_list.html	(revision b73526c914f345ee3ce99d5a8675497e6f47a709)
+++ templates/users/_approved_employee_list.html	(date 1558097728288)
@@ -18,16 +18,20 @@
                     <th>Mobile No.</th>
                     <th>Email</th>
                     <th>ID No.</th>
+                    <th>Agresso No.</th>
                     <th>Passport</th>
                     <th>Nationality</th>
+                    <th>Home address</th>
                     <th>Residential address</th>
                     <th>District</th>
                     <th>Duty country</th>
                     <th>Duty station</th>
                     <th>Department</th>
                     <th>Job title</th>
+                    <th>Reports to</th>
                     <th>Appointment date</th>
                     <th>Contract type</th>
+                    <th>Contract expiry</th>
                     <th>Cost centre</th>
                     <th>Grade</th>
                     <th>Gross salary</th>
@@ -64,16 +68,20 @@
                         <td>{{ employee.mobile_number }}</td>
                         <td>{{ employee.user.email }}</td>
                         <td>{{ employee.id_number }}</td>
+                        <td>{{ employee.agresso_number }}</td>
                         <td>{{ employee.passport_number }}</td>
                         <td>{{ employee.nationality }}</td>
+                        <td>{{ employee.home_address }}</td>
                         <td>{{ employee.residential_address }}</td>
                         <td>{{ employee.district }}</td>
                         <td>{{ employee.duty_country }}</td>
                         <td>{{ employee.duty_station }}</td>
                         <td>{{ employee.department }}</td>
                         <td>{{ employee.job_title }}</td>
+                        <td>{{ employee.reports_to }}</td>
                         <td>{{ employee.appointment_date|date:'d M, Y' }}</td>
                         <td>{{ employee.contract_type }}</td>
+                        <td>{{ employee.contract_expiry }}</td>
                         <td>{{ employee.cost_centre }}</td>
                         <td>{{ employee.grade }}</td>
                         <td>{{ employee.gross_salary|intcomma }}</td>
Index: templates/support_data/organization_detail.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- templates/support_data/organization_detail.html	(revision b73526c914f345ee3ce99d5a8675497e6f47a709)
+++ templates/support_data/organization_detail.html	(date 1558128794481)
@@ -1,4 +1,4 @@
-{% extends 'payroll/../base.html' %}
+{% extends 'base.html' %}
 {% load crispy_forms_tags %}
 
 {% block content %}
@@ -6,5 +6,8 @@
         <legend class="border-bottom mb-4">Organization</legend>
         Name: <p style="font-weight: bold">{{ object.name }}</p>
         Country: <p style="font-weight: bold">{{ object.country }}</p>
+        <a class="btn btn-success" href="{% url 'support_data:organization-list' %}">
+            CLOSE
+        </a>
     </div>
 {% endblock content %}
\ No newline at end of file
Index: templates/users/_terminate_employee_list.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- templates/users/_terminate_employee_list.html	(revision b73526c914f345ee3ce99d5a8675497e6f47a709)
+++ templates/users/_terminate_employee_list.html	(date 1558134228295)
@@ -30,7 +30,7 @@
                         <td>{{ employee.mobile_number }}</td>
                         <td>{{ employee.department }}</td>
                         <td>
-                            <a class="btn btn-sm btn-danger" href="{% url 'users:terminate-employee' pk=employee.id %}">
+                            <a class="btn btn-sm btn-danger" href="{% url 'users:terminate-employee' pk=employee.pk %}">
                                 TERMINATE
                             </a>
                         </td>
Index: users/forms.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- users/forms.py	(revision b73526c914f345ee3ce99d5a8675497e6f47a709)
+++ users/forms.py	(date 1558135370803)
@@ -2,6 +2,7 @@
 from django.contrib.auth import get_user_model
 from django.contrib.auth.forms import UserCreationForm
 from django.contrib.auth.models import Group
+from django.utils import timezone
 
 from hr_system.constants import YES_OR_NO_TYPES
 from payroll.models import Currency, PayrollCenter, Bank, EarningDeductionType
@@ -51,164 +52,59 @@
         self.fields['dr_ac_code'].label = "DR A/C code"
         self.fields['cr_ac_code'].label = "CR A/C code"
         self.fields['tin_number'].label = "TIN number"
-        self.fields['project'].label = "Project code"
 
-    # bio-data fields
-    user_group = forms.ModelChoiceField(queryset=Group.objects.all(), required=True)
     date_of_birth = forms.DateField(
-        widget=forms.DateInput(
-            format='%d-%m-%Y',
-            attrs={'type': 'date'})
+        input_formats=['%Y-%m-%d']
     )
     sex = forms.ChoiceField(choices=GENDER, widget=forms.RadioSelect(), required=True)
-    marital_status = forms.ChoiceField(choices=MARITAL_STATUS, widget=forms.Select())
-    nationality = forms.ModelChoiceField(queryset=Nationality.objects.all())
-    image = forms.ImageField(required=False)
-    mobile_number = forms.CharField(max_length=12, required=False)
-    passport_number = forms.CharField(required=False)
-    address = forms.CharField(required=False)
-    town = forms.CharField(required=False)
-
-    # work info fields
-    duty_country = forms.ModelChoiceField(queryset=Country.objects.all(), required=False)
-    duty_station = forms.ModelChoiceField(queryset=DutyStation.objects.all(), required=False)
-    department = forms.ModelChoiceField(queryset=Department.objects.all(), required=False)
-    job_title = forms.ModelChoiceField(queryset=JobTitle.objects.all(), required=False)
     appointment_date = forms.DateField(
-        widget=forms.DateInput(
-            format='%d-%m-%Y',
-            attrs={'type': 'date'}),
+        input_formats=['%Y-%m-%d'],
+        initial=timezone.now(),
+        required=False
+    )
+    contract_expiry = forms.DateField(
+        input_formats=['%Y-%m-%d'],
         required=False
     )
-    contract_type = forms.ModelChoiceField(queryset=ContractType.objects.all(), required=False)
-    grade = forms.ModelChoiceField(queryset=Grade.objects.all(), required=False)
-    gross_salary = forms.DecimalField(max_digits=9, decimal_places=2, required=False)
-    currency = forms.ModelChoiceField(queryset=Currency.objects.all(), required=False)
-    tin_number = forms.IntegerField(required=False)
-
-    # payroll info fields
-    social_security = forms.ChoiceField(choices=YES_OR_NO_TYPES, widget=forms.RadioSelect(), required=False)
-    social_security_number = forms.CharField(required=False, disabled=True)
-    payroll_center = forms.ModelChoiceField(queryset=PayrollCenter.objects.all(), required=False)
-    bank_1 = forms.ModelChoiceField(queryset=Bank.objects.all(), required=False)
-    bank_2 = forms.ModelChoiceField(queryset=Bank.objects.all(), required=False)
-    first_account_number = forms.IntegerField(required=False)
-    second_account_number = forms.IntegerField(required=False)
-    first_bank_percentage = forms.IntegerField(required=False, initial=0, max_value=100)
-    second_bank_percentage = forms.IntegerField(required=False, initial=0, max_value=100)
-
-    # emergency contact fields
-    kin_full_name = forms.CharField(required=False)
-    kin_phone_number = forms.CharField(max_length=12, required=False)
-    kin_email = forms.EmailField(required=False)
-    kin_relationship = forms.ModelChoiceField(queryset=Relationship.objects.all(), required=False)
 
     class Meta:
         """docstring for Meta"""
         model = Employee
-        exclude = ['user']
+        fields = '__all__'
 
 
-class ProfileUpdateForm(forms.ModelForm):
+class ProfileUpdateForm(ProfileCreationForm):
     """docstring for ProfileUpdateForm"""
 
-    CHOICES = (
-        ('APPROVED', 'Approve'),
-        ('REJECTED', 'Reject'),
-    )
-
-    def __init__(self, *args, **kwargs):
-        super().__init__(*args, **kwargs)
-        self.fields['first_account_number'].label = "Account Number 1"
-        self.fields['second_account_number'].label = "Account Number 2"
-        self.fields['first_bank_percentage'].label = "Percentage"
-        self.fields['second_bank_percentage'].label = "Percentage"
-        self.fields['kin_full_name'].label = "Full name"
-        self.fields['kin_email'].label = "Email"
-        self.fields['kin_phone_number'].label = "Phone"
-        self.fields['kin_relationship'].label = "Relationship"
-        self.fields['employment_status'].label = "Change status"
-        self.fields['dr_ac_code'].label = "DR A/C code"
-        self.fields['cr_ac_code'].label = "CR A/C code"
-        self.fields['tin_number'].label = "TIN number"
-        self.fields['project'].label = "Project code"
-
-    # bio-data fields
     user_group = forms.ModelChoiceField(queryset=Group.objects.all(), disabled=True, required=False)
-    id_number = forms.IntegerField(disabled=True)
-    date_of_birth = forms.DateField(disabled=True)
-    sex = forms.ChoiceField(choices=GENDER, widget=forms.RadioSelect(), disabled=True)
-    marital_status = forms.ChoiceField(choices=MARITAL_STATUS, widget=forms.Select())
-    nationality = forms.ModelChoiceField(queryset=Nationality.objects.all())
-    image = forms.ImageField(required=False)
-    mobile_number = forms.CharField(max_length=12, required=False)
-    passport_number = forms.CharField(required=False)
-    address = forms.CharField(required=False)
-    town = forms.CharField(required=False)
-
-    # work info fields
-    duty_country = forms.ModelChoiceField(queryset=Country.objects.all(), required=False)
-    duty_station = forms.ModelChoiceField(queryset=DutyStation.objects.all(), required=False)
-    department = forms.ModelChoiceField(queryset=Department.objects.all(), required=False)
-    job_title = forms.ModelChoiceField(queryset=JobTitle.objects.all(), required=False)
-    appointment_date = forms.DateField()
-    contract_type = forms.ModelChoiceField(queryset=ContractType.objects.all(), required=False)
-    grade = forms.ModelChoiceField(queryset=Grade.objects.all(), required=False)
-    gross_salary = forms.DecimalField(max_digits=9, decimal_places=2, required=False, widget=forms.NumberInput())
-    currency = forms.ModelChoiceField(queryset=Currency.objects.all(), required=False)
-    tin_number = forms.IntegerField(required=False)
-
-    # payroll info fields
-    social_security = forms.ChoiceField(choices=YES_OR_NO_TYPES, widget=forms.RadioSelect(), required=False)
-    social_security_number = forms.CharField(required=False, disabled=True)
-    payroll_center = forms.ModelChoiceField(queryset=PayrollCenter.objects.all(), required=False)
-    bank_1 = forms.ModelChoiceField(queryset=Bank.objects.all(), required=False)
-    bank_2 = forms.ModelChoiceField(queryset=Bank.objects.all(), required=False)
-    first_account_number = forms.IntegerField(required=False)
-    second_account_number = forms.IntegerField(required=False)
-    first_bank_percentage = forms.IntegerField(required=False)
-    second_bank_percentage = forms.IntegerField(required=False)
-
-    # emergency contact fields
-    kin_full_name = forms.CharField(required=False)
-    kin_phone_number = forms.CharField(max_length=12, required=False)
-    kin_email = forms.EmailField(required=False)
-    kin_relationship = forms.ModelChoiceField(queryset=Relationship.objects.all(), required=False)
-
-    employment_status = forms.ChoiceField(choices=EMP_STATUS_APP_TER, widget=forms.Select(), required=False)
 
     class Meta:
         """docstring for Meta"""
         model = Employee
-        exclude = ['user']
+        fields = '__all__'
 
 
-class EmployeeApprovalForm(ProfileUpdateForm):
+class EmployeeApprovalForm(ProfileCreationForm):
+    """docstring for EmployeeApprovalForm"""
+
     employment_status = forms.ChoiceField(choices=EMP_APPROVE_OR_REJECT, widget=forms.Select(), required=False)
 
     class Meta:
         """docstring for Meta"""
         model = Employee
-        exclude = ['user']
+        fields = '__all__'
 
 
 class TerminationForm(forms.ModelForm):
-    employee = forms.ModelChoiceField(queryset=Employee.objects.all(), required=False, disabled=True)
-    notice_date = forms.DateTimeField(
-        widget=forms.DateInput(
-            format='%d-%m-%Y',
-            attrs={'type': 'date'}),
+    employee = forms.ModelChoiceField(queryset=Employee.objects.all(), disabled=True)
+    notice_date = forms.DateField(
+        input_formats=['%Y-%m-%d'],
         required=False
     )
-    exit_date = forms.DateTimeField(
-        widget=forms.DateInput(
-            format='%d-%m-%Y',
-            attrs={'type': 'date'}),
+    exit_date = forms.DateField(
+        input_formats=['%Y-%m-%d'],
         required=False
     )
-    days_given = forms.IntegerField(required=False)
-    employable = forms.ChoiceField(choices=YES_OR_NO_TYPES, widget=forms.RadioSelect(), required=False)
-    reason = forms.Textarea()
 
     class Meta:
         model = TerminatedEmployees
Index: templates/users/_recruited_employee_list.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- templates/users/_recruited_employee_list.html	(revision b73526c914f345ee3ce99d5a8675497e6f47a709)
+++ templates/users/_recruited_employee_list.html	(date 1558097974879)
@@ -28,7 +28,7 @@
                         <td>{{ employee.mobile_number }}</td>
                         <td>{{ employee.department }}</td>
                         <td>
-                            <a class="btn btn-primary btn-sm" href="{% url 'users:approve-employee' pk=employee.id %}">
+                            <a class="btn btn-primary btn-sm" href="{% url 'users:approve-employee' pk=employee.user.pk %}">
                                 APPROVE/ REJECT
                             </a>
                         </td>
Index: reports/migrations/0001_initial.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- reports/migrations/0001_initial.py	(revision b73526c914f345ee3ce99d5a8675497e6f47a709)
+++ reports/migrations/0001_initial.py	(date 1558128198711)
@@ -1,4 +1,4 @@
-# Generated by Django 2.2 on 2019-05-16 12:40
+# Generated by Django 2.2 on 2019-05-17 21:23
 
 from django.db import migrations, models
 
Index: reports/migrations/0002_auto_20190516_1540.py
===================================================================
--- reports/migrations/0002_auto_20190516_1540.py	(revision b73526c914f345ee3ce99d5a8675497e6f47a709)
+++ reports/migrations/0002_auto_20190518_0023.py	(date 1558128198726)
@@ -1,4 +1,4 @@
-# Generated by Django 2.2 on 2019-05-16 12:40
+# Generated by Django 2.2 on 2019-05-17 21:23
 
 from django.db import migrations, models
 import django.db.models.deletion
@@ -10,8 +10,8 @@
 
     dependencies = [
         ('reports', '0001_initial'),
-        ('payroll', '0002_auto_20190516_1540'),
         ('users', '0001_initial'),
+        ('payroll', '0002_auto_20190518_0023'),
     ]
 
     operations = [
Index: templates/partials/messages.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- templates/partials/messages.html	(revision b73526c914f345ee3ce99d5a8675497e6f47a709)
+++ templates/partials/messages.html	(date 1558113152366)
@@ -1,6 +1,7 @@
 {% if messages %}
     {% for message in messages %}
-        <div class="alert alert-{{ message.tags }}">
+        <div class="alert alert-{{ message.tags }} alert-dismissible fade show">
+            <button type="button" class="close" data-dismiss="alert">&times;</button>
             {{ message }}
         </div>
     {% endfor %}
Index: payroll/migrations/0001_initial.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- payroll/migrations/0001_initial.py	(revision b73526c914f345ee3ce99d5a8675497e6f47a709)
+++ payroll/migrations/0001_initial.py	(date 1558128198639)
@@ -1,4 +1,4 @@
-# Generated by Django 2.2 on 2019-05-16 12:40
+# Generated by Django 2.2 on 2019-05-17 21:23
 
 from django.db import migrations, models
 
Index: templates/users/_separated_employee_list.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- templates/users/_separated_employee_list.html	(revision b73526c914f345ee3ce99d5a8675497e6f47a709)
+++ templates/users/_separated_employee_list.html	(date 1558135686278)
@@ -22,7 +22,7 @@
                 {% for terminated in object_list %}
                     <tr>
                         <td>
-                            <a href="{% url 'users:user-detail' pk=terminated.employee.id %}">
+                            <a href="{% url 'users:user-detail' pk=terminated.pk %}">
                                 {{ terminated.employee.user.get_full_name }}
                             </a>
                         </td>
Index: users/models.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- users/models.py	(revision b73526c914f345ee3ce99d5a8675497e6f47a709)
+++ users/models.py	(date 1558135118332)
@@ -1,7 +1,10 @@
+import re
+
 from django.contrib.auth import get_user_model
 from django.contrib.auth.models import AbstractUser
 from django.contrib.auth.models import Group
 from django.core.exceptions import ValidationError
+from django.core.validators import RegexValidator
 from django.db import models
 from django.urls import reverse
 from django.utils import timezone
@@ -33,18 +36,6 @@
         return self.cost_centre
 
 
-class Project(models.Model):
-    cost_centre = models.ForeignKey(CostCentre, on_delete=models.CASCADE)
-    project_code = models.CharField(max_length=20, primary_key=True)
-    project_name = models.CharField(max_length=200)
-
-    def get_absolute_url(self):
-        return reverse('users:project-detail', kwargs={'pk': self.pk})
-
-    def __str__(self):
-        return self.project_code
-
-
 class District(models.Model):
     name = models.CharField(max_length=200)
 
@@ -54,75 +45,97 @@
 
 class Employee(models.Model):
     """docstring for Employee"""
-    user = models.OneToOneField(get_user_model(), on_delete=models.CASCADE)
-    user_group = models.ForeignKey(Group, on_delete=models.DO_NOTHING, null=True)
+    phone_number_regex = re.compile(r'^\+?1?\d{9,15}$')
+    validation_msg = 'Enter a valid phone number .i.e: +0700000000 or +256700000000'
+    user = models.OneToOneField(get_user_model(), on_delete=models.CASCADE, primary_key=True, editable=False)
+    user_group = models.ForeignKey(Group, on_delete=models.SET_NULL, null=True)
     marital_status = models.CharField(max_length=9, choices=MARITAL_STATUS)
-    image = models.ImageField(default='default.png', upload_to=get_image_filename, blank=True)
-    mobile_number = models.CharField(max_length=12, blank=True, null=True)
+    image = models.ImageField(default='default.png', upload_to=get_image_filename, blank=True, null=True)
+    mobile_number = models.CharField(max_length=15, blank=True, null=True,
+                                     validators=[RegexValidator(inverse_match=True, regex=phone_number_regex,
+                                                                message=validation_msg)])
     date_of_birth = models.DateField(default=timezone.now)
     sex = models.CharField(max_length=6, choices=GENDER)
-    id_number = models.CharField('ID Number', max_length=30)
-    passport_number = models.CharField(max_length=16, blank=True, null=True)
-    residential_address = models.CharField('Residential address', max_length=30, blank=True, null=True)
+    id_number = models.CharField(max_length=200)
+    passport_number = models.CharField(max_length=200, blank=True, null=True)
+    home_address = models.CharField(max_length=200, blank=True, null=True)
+    residential_address = models.CharField(max_length=200, blank=True, null=True)
     district = models.ForeignKey(District, on_delete=models.SET_NULL, blank=True, null=True)
-    gross_salary = models.DecimalField(max_digits=9, decimal_places=2, null=True)
-    tin_number = models.IntegerField('TIN NUMBER', null=True, blank=True)
-    nationality = models.ForeignKey(Nationality, on_delete=models.DO_NOTHING)
-    grade = models.ForeignKey(Grade, on_delete=models.DO_NOTHING, null=True, blank=True)
-    duty_station = models.ForeignKey(DutyStation, on_delete=models.DO_NOTHING, null=True, blank=True)
-    duty_country = models.ForeignKey(Country, on_delete=models.DO_NOTHING, null=True, blank=True)
-    department = models.ForeignKey(Department, on_delete=models.DO_NOTHING, null=True, blank=True)
-    job_title = models.ForeignKey(JobTitle, on_delete=models.DO_NOTHING, null=True, blank=True)
-    contract_type = models.ForeignKey(ContractType, on_delete=models.DO_NOTHING, null=True, blank=True)
+    gross_salary = models.DecimalField(max_digits=12, decimal_places=2, null=True)
+    tin_number = models.CharField(max_length=200, null=True, blank=True)
+    nationality = models.ForeignKey(Nationality, on_delete=models.SET_NULL, null=True)
+    grade = models.ForeignKey(Grade, on_delete=models.SET_NULL, null=True, blank=True)
+    duty_station = models.ForeignKey(DutyStation, on_delete=models.SET_NULL, null=True, blank=True)
+    duty_country = models.ForeignKey(Country, on_delete=models.SET_NULL, null=True, blank=True)
+    department = models.ForeignKey(Department, on_delete=models.SET_NULL, null=True, blank=True)
+    job_title = models.ForeignKey(JobTitle, on_delete=models.SET_NULL, null=True, blank=True)
+    reports_to = models.ForeignKey(get_user_model(), on_delete=models.SET_NULL,
+                                   related_name='reports_to', null=True, blank=True)
+    contract_type = models.ForeignKey(ContractType, on_delete=models.SET_NULL, null=True, blank=True)
+    contract_expiry = models.DateField(null=True, blank=True)
     appointment_date = models.DateField(default=timezone.now, null=True, blank=True)
-    social_security = models.CharField('Pays Social Security', max_length=3, choices=YES_OR_NO_TYPES, null=True,
-                                       blank=True)
-    payroll_center = models.ForeignKey(PayrollCenter, on_delete=models.DO_NOTHING, null=True)
-    bank_1 = models.ForeignKey(Bank, on_delete=models.DO_NOTHING, related_name='first_bank', null=True, blank=True)
-    bank_2 = models.ForeignKey(Bank, on_delete=models.DO_NOTHING, related_name='second_bank', null=True, blank=True)
-    cost_centre = models.ForeignKey(CostCentre, on_delete=models.SET_NULL, null=True, blank=True, default=None)
-    first_account_number = models.IntegerField('Account Number 1', null=True, blank=True)
-    second_account_number = models.IntegerField('Account Number 2', null=True, blank=True)
-    first_bank_percentage = models.IntegerField('Percentage', null=True, blank=True, default=0)
-    second_bank_percentage = models.IntegerField('Percentage', null=True, blank=True, default=0)
-    social_security_number = models.CharField(max_length=30, null=True, blank=True)
-    currency = models.ForeignKey(Currency, on_delete=models.DO_NOTHING, null=True, blank=True)
+    social_security = models.CharField(max_length=3, choices=YES_OR_NO_TYPES, null=True, blank=True)
+    payroll_center = models.ForeignKey(PayrollCenter, on_delete=models.SET_NULL, null=True)
+    bank_1 = models.ForeignKey(Bank, on_delete=models.SET_NULL, related_name='first_bank', null=True, blank=True)
+    bank_2 = models.ForeignKey(Bank, on_delete=models.SET_NULL, related_name='second_bank', null=True, blank=True)
+    cost_centre = models.ForeignKey(CostCentre, on_delete=models.SET_NULL, null=True, blank=True, )
+    first_account_number = models.CharField(max_length=200, null=True, blank=True)
+    second_account_number = models.CharField(max_length=200, null=True, blank=True)
+    first_bank_percentage = models.IntegerField(null=True, blank=True, default=0)
+    second_bank_percentage = models.IntegerField(null=True, blank=True, default=0)
+    social_security_number = models.CharField(max_length=200, null=True, blank=True)
+    currency = models.ForeignKey(Currency, on_delete=models.SET_NULL, null=True, blank=True)
     kin_full_name = models.CharField(max_length=250, null=True, blank=True)
-    kin_phone_number = models.CharField(max_length=12, null=True, blank=True)
+    kin_phone_number = models.CharField(max_length=15, blank=True, null=True,
+                                        validators=[RegexValidator(inverse_match=True, regex=phone_number_regex,
+                                                                   message=validation_msg)])
     kin_email = models.EmailField(null=True, blank=True)
-    kin_relationship = models.ForeignKey(Relationship, on_delete=models.DO_NOTHING, null=True, blank=True)
-    dr_ac_code = models.CharField(max_length=30, null=True, blank=True)
-    cr_ac_code = models.CharField(max_length=30, null=True, blank=True)
+    kin_relationship = models.ForeignKey(Relationship, on_delete=models.SET_NULL, null=True, blank=True)
+    dr_ac_code = models.CharField(max_length=50, null=True, blank=True)
+    cr_ac_code = models.CharField(max_length=50, null=True, blank=True)
     employment_status = models.CharField(max_length=17, choices=EMP_STATUS, default=EMP_STATUS[0][0], blank=True)
-    project = models.ForeignKey(Project, on_delete=models.CASCADE, null=True, blank=True)
-    agresso_number = models.IntegerField(unique=True, null=True, blank=True)
+    agresso_number = models.CharField(max_length=200, unique=True, null=True, blank=True)
+
+    def clean(self):
+        user_with_id_no = Employee.objects.filter(id_number__exact=self.id_number).first() if self.id_number else None
+        if user_with_id_no.pk != self.pk:
+            raise ValidationError("ID number already exists.")
 
-    def clean_payroll_center(self):
+        user_with_passport_no = Employee.objects.filter(id_number__exact=self.passport_number).first() if self.passport_number else None
+        if user_with_passport_no:
+            if user_with_passport_no.pk != self.pk:
+                raise ValidationError("Passport number already exists.")
+
+        user_with_agresso_no = Employee.objects.filter(id_number__exact=self.agresso_number) if self.agresso_number else None
+        if user_with_agresso_no:
+            if user_with_agresso_no != self.pk:
+                raise ValidationError("Agresso number already exists.")
+
         if self.payroll_center is None:
-            raise ValidationError("Please enter employee 'Payroll center'.")
+            raise ValidationError("Payroll Canter required.")
 
-    def clean_gross_salary(self):
         if self.gross_salary is None:
-            raise ValidationError("Please enter employee 'Gross salary'.")
+            raise ValidationError("Basic salary required.")
 
-    # TODO: add phone number validator
-    def clean_phone_number(self):
-        pass
+        if self.first_bank_percentage > 0:
+            if self.bank_1 is None:
+                raise ValidationError("Bank 1 required.")
+            if self.first_account_number is None:
+                raise ValidationError("Account 1 required.")
 
-    def clean(self):
-        self.clean_payroll_center()
-        self.clean_gross_salary()
+        if self.second_bank_percentage > 0:
+            if self.bank_2 is None:
+                raise ValidationError("Bank 2 required.")
+            if self.second_account_number is None:
+                raise ValidationError("Account 2 required.")
 
     def save(self, force_insert=False, force_update=False, using=None,
              update_fields=None):
         self.full_clean()
-        if self.appointment_date is None:
-            self.appointment_date = timezone.now()
-            super().save()
         super().save(force_insert, force_update, using, update_fields)
 
     def __str__(self):
-        return f'{self.user}'
+        return ' '.join([name.capitalize() for name in f'{self.user}'.split('.')])
 
 
 class PayrollProcessors(models.Model):
@@ -131,8 +144,7 @@
     earning_and_deductions_category = models.ForeignKey(EarningDeductionCategory, on_delete=models.PROTECT, blank=True)
     amount = models.DecimalField(max_digits=9, decimal_places=2, null=True, blank=True)
     payroll_period = models.ForeignKey(PayrollPeriod, on_delete=models.SET_NULL, null=True, blank=True)
-    payroll_key = models.CharField(max_length=150, blank=True, null=False,
-                                   default=None, unique=True, primary_key=True, editable=False)
+    payroll_key = models.CharField(max_length=150, blank=True, null=False, unique=True, primary_key=True, editable=False)
 
     def to_dict(self):
         data = {
@@ -155,17 +167,29 @@
 
 
 class TerminatedEmployees(models.Model):
-    employee = models.ForeignKey(Employee, on_delete=models.CASCADE)
-    notice_date = models.DateField(default=timezone.now, null=True)
-    exit_date = models.DateField(default=timezone.now, null=True)
-    days_given = models.IntegerField(null=True)
+    employee = models.OneToOneField(Employee, on_delete=models.CASCADE, primary_key=True)
+    notice_date = models.DateField(default=timezone.now, null=True, blank=True)
+    exit_date = models.DateField(default=timezone.now, null=True, blank=True)
+    days_given = models.PositiveIntegerField(null=True, blank=True)
     employable = models.CharField(max_length=3, choices=YES_OR_NO_TYPES, null=True, blank=True)
-    reason = models.TextField()
+    reason = models.TextField(null=True, blank=True)
 
     def __str__(self):
         return self.employee
 
 
+class Project(models.Model):
+    cost_centre = models.ForeignKey(CostCentre, on_delete=models.CASCADE)
+    project_code = models.CharField(max_length=20, primary_key=True)
+    project_name = models.CharField(max_length=200)
+
+    def get_absolute_url(self):
+        return reverse('users:project-detail', kwargs={'pk': self.pk})
+
+    def __str__(self):
+        return self.project_code
+
+
 class SOF(models.Model):
     project_code = models.OneToOneField(Project, on_delete=models.CASCADE)
     sof_code = models.CharField(max_length=20)
@@ -191,7 +215,7 @@
 
 
 class EmployeeProject(models.Model):
-    project_key = models.CharField(max_length=150, blank=True, null=False, default=None, editable=False)
+    project_key = models.CharField(max_length=150, blank=True, null=False, editable=False)
     employee = models.ForeignKey(Employee, on_delete=models.CASCADE)
     cost_center = models.ForeignKey(CostCentre, on_delete=models.SET_NULL, null=True)
     project_code = models.ForeignKey(Project, on_delete=models.SET_NULL, null=True)
Index: templates/users/_approve_employee.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- templates/users/_approve_employee.html	(revision b73526c914f345ee3ce99d5a8675497e6f47a709)
+++ templates/users/_approve_employee.html	(date 1558130502982)
@@ -1,4 +1,4 @@
-{% extends "payroll/../base.html" %}
+{% extends "base.html" %}
 {% load crispy_forms_tags %}
 
 {% block content %}
@@ -107,10 +107,13 @@
                                     </div>
                                 </div>
                                 <div class="form-row">
-                                    <div class="form-group col-md-6 mb-0">
+                                    <div class="form-group col-md-4 mb-0">
+                                        {{ profile_update_form.home_address|as_crispy_field }}
+                                    </div>
+                                    <div class="form-group col-md-4 mb-0">
                                         {{ profile_update_form.residential_address|as_crispy_field }}
                                     </div>
-                                    <div class="form-group col-md-6 mb-0">
+                                    <div class="form-group col-md-4 mb-0">
                                         {{ profile_update_form.district|as_crispy_field }}
                                     </div>
                                 </div>
@@ -127,20 +130,26 @@
                                     </div>
                                 </div>
                                 <div class="form-row">
-                                    <div class="form-group col-md-6 mb-0">
+                                    <div class="form-group col-md-4 mb-0">
                                         {{ profile_update_form.department|as_crispy_field }}
                                     </div>
-                                    <div class="form-group col-md-6 mb-0">
+                                    <div class="form-group col-md-4 mb-0">
                                         {{ profile_update_form.job_title|as_crispy_field }}
+                                    </div>
+                                    <div class="form-group col-md-4 mb-0">
+                                        {{ profile_update_form.reports_to|as_crispy_field }}
                                     </div>
                                 </div>
                                 <div class="form-row">
-                                    <div class="form-group col-md-6 mb-0">
+                                    <div class="form-group col-md-4 mb-0">
                                         {{ profile_update_form.appointment_date|as_crispy_field }}
                                     </div>
-                                    <div class="form-group col-md-6 mb-0">
+                                    <div class="form-group col-md-4 mb-0">
                                         {{ profile_update_form.contract_type|as_crispy_field }}
                                     </div>
+                                    <div class="form-group col-md-4 mb-0">
+                                        {{ profile_update_form.contract_expiry|as_crispy_field }}
+                                    </div>
                                 </div>
                                 <div class="form-row">
                                     <div class="form-group col-md-6 mb-0">
@@ -176,11 +185,8 @@
                                         {{ profile_update_form.social_security_number|as_crispy_field }}
                                     </div>
                                 </div>
-                                 <div class="form-row">
+                                <div class="form-row">
                                     <div class="form-group col-md-6 mb-0">
-                                        {{ profile_update_form.project|as_crispy_field }}
-                                    </div>
-                                    <div class="form-group col-md-6 mb-0">
                                         {{ profile_update_form.agresso_number|as_crispy_field }}
                                     </div>
                                 </div>
@@ -267,4 +273,19 @@
             </div>
         </div>
     </form>
-{% endblock content %}
\ No newline at end of file
+{% endblock content %}
+{% block scripts %}
+    <script>
+        $(function () {
+            $("#id_date_of_birth").datetimepicker({
+                format: 'Y-m-d',
+            });
+            $("#id_appointment_date").datetimepicker({
+                format: 'Y-m-d',
+            });
+            $("#id_contract_expiry").datetimepicker({
+                format: 'Y-m-d',
+            });
+        });
+    </script>
+{% endblock scripts %}
\ No newline at end of file
Index: payroll/migrations/0002_auto_20190516_1540.py
===================================================================
--- payroll/migrations/0002_auto_20190516_1540.py	(revision b73526c914f345ee3ce99d5a8675497e6f47a709)
+++ payroll/migrations/0002_auto_20190518_0023.py	(date 1558128198661)
@@ -1,4 +1,4 @@
-# Generated by Django 2.2 on 2019-05-16 12:40
+# Generated by Django 2.2 on 2019-05-17 21:23
 
 from django.conf import settings
 from django.db import migrations, models
@@ -11,8 +11,8 @@
 
     dependencies = [
         migrations.swappable_dependency(settings.AUTH_USER_MODEL),
-        ('support_data', '0001_initial'),
         ('payroll', '0001_initial'),
+        ('support_data', '0001_initial'),
     ]
 
     operations = [
Index: users/views.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- users/views.py	(revision b73526c914f345ee3ce99d5a8675497e6f47a709)
+++ users/views.py	(date 1558135686402)
@@ -216,12 +216,12 @@
 @login_required
 @permission_required('users.approve_employee', raise_exception=True)
 def approve_employee(request, pk=None):
-    prof = get_object_or_404(Employee, pk=pk)
-    profile_user = prof.user
+    employee = get_object_or_404(Employee, pk=pk)
+    profile_user = employee.user
 
     if request.method == 'POST':
         user_update_form = StaffUpdateForm(request.POST, instance=profile_user)
-        profile_update_form = EmployeeApprovalForm(request.POST, request.FILES, instance=profile_user.employee)
+        profile_update_form = EmployeeApprovalForm(request.POST, request.FILES, instance=employee)
         if user_update_form.is_valid() and profile_update_form.is_valid():
             user_update_form.save()
             employee_profile = profile_update_form.save(commit=False)
@@ -235,11 +235,11 @@
 
             # logger.info(f'{request.user} approved Employee {employee_profile.user}')
 
-            messages.success(request, 'Employee has been approved')
+            messages.success(request, f'{employee} has been approved')
             return redirect('users:employee-approval')
     else:
         user_update_form = StaffUpdateForm(instance=profile_user)
-        profile_update_form = EmployeeApprovalForm(instance=profile_user.employee)
+        profile_update_form = EmployeeApprovalForm(instance=employee)
 
     context = {
         'profile_user': profile_user,
@@ -489,7 +489,7 @@
         net_pay = gross_earnings - total_deductions
 
         try:
-            key = f'{payroll_period.payroll_key}S{employee.id}'
+            key = f'{payroll_period.payroll_key}S{employee.pk}'
             report = ExTraSummaryReportInfo.objects.get(pk=key)
             report.net_pay = net_pay
             report.gross_earning = gross_earnings
Index: support_data/migrations/0001_initial.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- support_data/migrations/0001_initial.py	(revision b73526c914f345ee3ce99d5a8675497e6f47a709)
+++ support_data/migrations/0001_initial.py	(date 1558128198693)
@@ -1,4 +1,4 @@
-# Generated by Django 2.2 on 2019-05-16 12:40
+# Generated by Django 2.2 on 2019-05-17 21:23
 
 from django.db import migrations, models
 import django.db.models.deletion
Index: users/migrations/0002_auto_20190518_0051.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- users/migrations/0002_auto_20190518_0051.py	(date 1558129902452)
+++ users/migrations/0002_auto_20190518_0051.py	(date 1558129902452)
@@ -0,0 +1,20 @@
+# Generated by Django 2.2 on 2019-05-17 21:51
+
+from django.conf import settings
+from django.db import migrations, models
+import django.db.models.deletion
+
+
+class Migration(migrations.Migration):
+
+    dependencies = [
+        ('users', '0001_initial'),
+    ]
+
+    operations = [
+        migrations.AlterField(
+            model_name='employee',
+            name='user',
+            field=models.OneToOneField(editable=False, on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL),
+        ),
+    ]
Index: users/migrations/0003_auto_20190518_0143.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- users/migrations/0003_auto_20190518_0143.py	(date 1558133033928)
+++ users/migrations/0003_auto_20190518_0143.py	(date 1558133033928)
@@ -0,0 +1,29 @@
+# Generated by Django 2.2 on 2019-05-17 22:43
+
+from django.db import migrations, models
+import django.db.models.deletion
+
+
+class Migration(migrations.Migration):
+
+    dependencies = [
+        ('users', '0002_auto_20190518_0051'),
+    ]
+
+    operations = [
+        migrations.AlterField(
+            model_name='employee',
+            name='cost_centre',
+            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='users.CostCentre'),
+        ),
+        migrations.AlterField(
+            model_name='employeeproject',
+            name='project_key',
+            field=models.CharField(blank=True, editable=False, max_length=150),
+        ),
+        migrations.AlterField(
+            model_name='payrollprocessors',
+            name='payroll_key',
+            field=models.CharField(blank=True, editable=False, max_length=150, primary_key=True, serialize=False, unique=True),
+        ),
+    ]
Index: users/migrations/0004_auto_20190518_0149.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- users/migrations/0004_auto_20190518_0149.py	(date 1558133348465)
+++ users/migrations/0004_auto_20190518_0149.py	(date 1558133348465)
@@ -0,0 +1,34 @@
+# Generated by Django 2.2 on 2019-05-17 22:49
+
+from django.db import migrations, models
+import django.utils.timezone
+
+
+class Migration(migrations.Migration):
+
+    dependencies = [
+        ('users', '0003_auto_20190518_0143'),
+    ]
+
+    operations = [
+        migrations.AlterField(
+            model_name='terminatedemployees',
+            name='days_given',
+            field=models.IntegerField(blank=True, null=True),
+        ),
+        migrations.AlterField(
+            model_name='terminatedemployees',
+            name='exit_date',
+            field=models.DateField(blank=True, default=django.utils.timezone.now, null=True),
+        ),
+        migrations.AlterField(
+            model_name='terminatedemployees',
+            name='notice_date',
+            field=models.DateField(blank=True, default=django.utils.timezone.now, null=True),
+        ),
+        migrations.AlterField(
+            model_name='terminatedemployees',
+            name='reason',
+            field=models.TextField(blank=True, null=True),
+        ),
+    ]
Index: users/migrations/0001_initial.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- users/migrations/0001_initial.py	(revision b73526c914f345ee3ce99d5a8675497e6f47a709)
+++ users/migrations/0001_initial.py	(date 1558128198778)
@@ -1,11 +1,13 @@
-# Generated by Django 2.2 on 2019-05-16 12:40
+# Generated by Django 2.2 on 2019-05-17 21:23
 
 from django.conf import settings
 import django.contrib.auth.models
 import django.contrib.auth.validators
+import django.core.validators
 from django.db import migrations, models
 import django.db.models.deletion
 import django.utils.timezone
+import re
 import users.utils
 
 
@@ -15,8 +17,8 @@
 
     dependencies = [
         ('auth', '0011_update_proxy_permissions'),
-        ('support_data', '0001_initial'),
         ('payroll', '0001_initial'),
+        ('support_data', '0001_initial'),
     ]
 
     operations = [
@@ -53,70 +55,84 @@
             ],
         ),
         migrations.CreateModel(
-            name='DEA',
+            name='District',
             fields=[
                 ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
-                ('dea_code', models.CharField(max_length=20)),
-                ('dea_name', models.CharField(max_length=200)),
+                ('name', models.CharField(max_length=200)),
             ],
         ),
         migrations.CreateModel(
-            name='District',
+            name='Project',
             fields=[
-                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
-                ('name', models.CharField(max_length=200)),
+                ('project_code', models.CharField(max_length=20, primary_key=True, serialize=False)),
+                ('project_name', models.CharField(max_length=200)),
+                ('cost_centre', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.CostCentre')),
             ],
         ),
         migrations.CreateModel(
             name='Employee',
             fields=[
-                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
+                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                 ('marital_status', models.CharField(choices=[('SINGLE', 'Single'), ('MARRIED', 'Married'), ('SEPARATED', 'Separated'), ('DIVORCED', 'Divorced'), ('WIDOWER', 'Widower')], max_length=9)),
-                ('image', models.ImageField(blank=True, default='default.png', upload_to=users.utils.get_image_filename)),
-                ('mobile_number', models.CharField(blank=True, max_length=12, null=True)),
+                ('image', models.ImageField(blank=True, default='default.png', null=True, upload_to=users.utils.get_image_filename)),
+                ('mobile_number', models.CharField(blank=True, max_length=15, null=True, validators=[django.core.validators.RegexValidator(inverse_match=True, message='Enter a valid phone number .i.e: +0700000000 or +256700000000', regex=re.compile('^\\+?1?\\d{9,15}$'))])),
                 ('date_of_birth', models.DateField(default=django.utils.timezone.now)),
                 ('sex', models.CharField(choices=[('MALE', 'Male'), ('FEMALE', 'Female')], max_length=6)),
-                ('id_number', models.CharField(max_length=30, verbose_name='ID Number')),
-                ('passport_number', models.CharField(blank=True, max_length=16, null=True)),
-                ('residential_address', models.CharField(blank=True, max_length=30, null=True, verbose_name='Residential address')),
-                ('gross_salary', models.DecimalField(decimal_places=2, max_digits=9, null=True)),
-                ('tin_number', models.IntegerField(blank=True, null=True, verbose_name='TIN NUMBER')),
+                ('id_number', models.CharField(max_length=200)),
+                ('passport_number', models.CharField(blank=True, max_length=200, null=True)),
+                ('home_address', models.CharField(blank=True, max_length=200, null=True)),
+                ('residential_address', models.CharField(blank=True, max_length=200, null=True)),
+                ('gross_salary', models.DecimalField(decimal_places=2, max_digits=12, null=True)),
+                ('tin_number', models.CharField(blank=True, max_length=200, null=True)),
+                ('contract_expiry', models.DateField(blank=True, null=True)),
                 ('appointment_date', models.DateField(blank=True, default=django.utils.timezone.now, null=True)),
-                ('social_security', models.CharField(blank=True, choices=[('YES', 'Yes'), ('NO', 'No')], max_length=3, null=True, verbose_name='Pays Social Security')),
-                ('first_account_number', models.IntegerField(blank=True, null=True, verbose_name='Account Number 1')),
-                ('second_account_number', models.IntegerField(blank=True, null=True, verbose_name='Account Number 2')),
-                ('first_bank_percentage', models.IntegerField(blank=True, default=0, null=True, verbose_name='Percentage')),
-                ('second_bank_percentage', models.IntegerField(blank=True, default=0, null=True, verbose_name='Percentage')),
-                ('social_security_number', models.CharField(blank=True, max_length=30, null=True)),
+                ('social_security', models.CharField(blank=True, choices=[('YES', 'Yes'), ('NO', 'No')], max_length=3, null=True)),
+                ('first_account_number', models.CharField(blank=True, max_length=200, null=True)),
+                ('second_account_number', models.CharField(blank=True, max_length=200, null=True)),
+                ('first_bank_percentage', models.IntegerField(blank=True, default=0, null=True)),
+                ('second_bank_percentage', models.IntegerField(blank=True, default=0, null=True)),
+                ('social_security_number', models.CharField(blank=True, max_length=200, null=True)),
                 ('kin_full_name', models.CharField(blank=True, max_length=250, null=True)),
-                ('kin_phone_number', models.CharField(blank=True, max_length=12, null=True)),
+                ('kin_phone_number', models.CharField(blank=True, max_length=15, null=True, validators=[django.core.validators.RegexValidator(inverse_match=True, message='Enter a valid phone number .i.e: +0700000000 or +256700000000', regex=re.compile('^\\+?1?\\d{9,15}$'))])),
                 ('kin_email', models.EmailField(blank=True, max_length=254, null=True)),
-                ('dr_ac_code', models.CharField(blank=True, max_length=30, null=True)),
-                ('cr_ac_code', models.CharField(blank=True, max_length=30, null=True)),
+                ('dr_ac_code', models.CharField(blank=True, max_length=50, null=True)),
+                ('cr_ac_code', models.CharField(blank=True, max_length=50, null=True)),
                 ('employment_status', models.CharField(blank=True, choices=[('RECRUIT', 'Recruit'), ('APPROVED', 'Approved'), ('REJECTED', 'Rejected'), ('TERMINATED', 'Terminated')], default='RECRUIT', max_length=17)),
-                ('agresso_number', models.IntegerField(blank=True, null=True, unique=True)),
-                ('bank_1', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='first_bank', to='payroll.Bank')),
-                ('bank_2', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='second_bank', to='payroll.Bank')),
-                ('contract_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='support_data.ContractType')),
+                ('agresso_number', models.CharField(blank=True, max_length=200, null=True, unique=True)),
+                ('bank_1', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='first_bank', to='payroll.Bank')),
+                ('bank_2', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='second_bank', to='payroll.Bank')),
+                ('contract_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='support_data.ContractType')),
                 ('cost_centre', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, to='users.CostCentre')),
-                ('currency', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='payroll.Currency')),
-                ('department', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='support_data.Department')),
+                ('currency', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='payroll.Currency')),
+                ('department', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='support_data.Department')),
                 ('district', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='users.District')),
-                ('duty_country', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='support_data.Country')),
-                ('duty_station', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='support_data.DutyStation')),
-                ('grade', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='support_data.Grade')),
-                ('job_title', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='support_data.JobTitle')),
-                ('kin_relationship', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='support_data.Relationship')),
-                ('nationality', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='support_data.Nationality')),
-                ('payroll_center', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='payroll.PayrollCenter')),
+                ('duty_country', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='support_data.Country')),
+                ('duty_station', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='support_data.DutyStation')),
+                ('grade', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='support_data.Grade')),
+                ('job_title', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='support_data.JobTitle')),
+                ('kin_relationship', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='support_data.Relationship')),
+                ('nationality', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='support_data.Nationality')),
+                ('payroll_center', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='payroll.PayrollCenter')),
+                ('reports_to', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='reports_to', to=settings.AUTH_USER_MODEL)),
+                ('user_group', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='auth.Group')),
             ],
         ),
         migrations.CreateModel(
-            name='Project',
+            name='SOF',
+            fields=[
+                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
+                ('sof_code', models.CharField(max_length=20)),
+                ('sof_name', models.CharField(max_length=200)),
+                ('project_code', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='users.Project')),
+            ],
+        ),
+        migrations.CreateModel(
+            name='DEA',
             fields=[
-                ('project_code', models.CharField(max_length=20, primary_key=True, serialize=False)),
-                ('project_name', models.CharField(max_length=200)),
-                ('cost_centre', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.CostCentre')),
+                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
+                ('dea_code', models.CharField(max_length=20)),
+                ('dea_name', models.CharField(max_length=200)),
+                ('sof_code', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='users.SOF')),
             ],
         ),
         migrations.CreateModel(
@@ -131,15 +147,6 @@
                 ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.Employee')),
             ],
         ),
-        migrations.CreateModel(
-            name='SOF',
-            fields=[
-                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
-                ('sof_code', models.CharField(max_length=20)),
-                ('sof_name', models.CharField(max_length=200)),
-                ('project_code', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='users.Project')),
-            ],
-        ),
         migrations.CreateModel(
             name='PayrollProcessors',
             fields=[
@@ -147,8 +154,8 @@
                 ('payroll_key', models.CharField(blank=True, default=None, editable=False, max_length=150, primary_key=True, serialize=False, unique=True)),
                 ('earning_and_deductions_category', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.PROTECT, to='payroll.EarningDeductionCategory')),
                 ('earning_and_deductions_type', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.PROTECT, to='payroll.EarningDeductionType')),
+                ('payroll_period', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='payroll.PayrollPeriod')),
                 ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.Employee')),
-                ('payroll_period', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='payroll.PayrollPeriod')),
             ],
         ),
         migrations.CreateModel(
@@ -160,29 +167,9 @@
                 ('cost_center', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='users.CostCentre')),
                 ('created_by', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                 ('dea_code', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='users.DEA')),
-                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.Employee')),
                 ('project_code', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='users.Project')),
                 ('sof_code', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='users.SOF')),
+                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.Employee')),
             ],
-        ),
-        migrations.AddField(
-            model_name='employee',
-            name='project',
-            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='users.Project'),
-        ),
-        migrations.AddField(
-            model_name='employee',
-            name='user',
-            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
-        ),
-        migrations.AddField(
-            model_name='employee',
-            name='user_group',
-            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='auth.Group'),
-        ),
-        migrations.AddField(
-            model_name='dea',
-            name='sof_code',
-            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='users.SOF'),
         ),
     ]
Index: .idea/vcs.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/vcs.xml	(date 1558123525559)
+++ .idea/vcs.xml	(date 1558123525559)
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="VcsDirectoryMappings">
+    <mapping directory="$PROJECT_DIR$" vcs="Git" />
+  </component>
+</project>
\ No newline at end of file
Index: users/migrations/0005_auto_20190518_0151.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- users/migrations/0005_auto_20190518_0151.py	(date 1558133460778)
+++ users/migrations/0005_auto_20190518_0151.py	(date 1558133460778)
@@ -0,0 +1,19 @@
+# Generated by Django 2.2 on 2019-05-17 22:51
+
+from django.db import migrations, models
+import django.db.models.deletion
+
+
+class Migration(migrations.Migration):
+
+    dependencies = [
+        ('users', '0004_auto_20190518_0149'),
+    ]
+
+    operations = [
+        migrations.AlterField(
+            model_name='terminatedemployees',
+            name='employee',
+            field=models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, to='users.Employee'),
+        ),
+    ]
Index: .idea/modules.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/modules.xml	(date 1558123525450)
+++ .idea/modules.xml	(date 1558123525450)
@@ -0,0 +1,8 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="ProjectModuleManager">
+    <modules>
+      <module fileurl="file://$PROJECT_DIR$/.idea/hr_system.iml" filepath="$PROJECT_DIR$/.idea/hr_system.iml" />
+    </modules>
+  </component>
+</project>
\ No newline at end of file
Index: .idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/misc.xml	(date 1558123525332)
+++ .idea/misc.xml	(date 1558123525332)
@@ -0,0 +1,10 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="JavaScriptSettings">
+    <option name="languageLevel" value="ES6" />
+  </component>
+  <component name="NodePackageJsonFileManager">
+    <packageJsonPaths />
+  </component>
+  <component name="ProjectRootManager" version="2" project-jdk-name="Python 3.7 (payroll)" project-jdk-type="Python SDK" />
+</project>
\ No newline at end of file
Index: users/migrations/0006_auto_20190518_0151.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- users/migrations/0006_auto_20190518_0151.py	(date 1558133505290)
+++ users/migrations/0006_auto_20190518_0151.py	(date 1558133505290)
@@ -0,0 +1,18 @@
+# Generated by Django 2.2 on 2019-05-17 22:51
+
+from django.db import migrations, models
+
+
+class Migration(migrations.Migration):
+
+    dependencies = [
+        ('users', '0005_auto_20190518_0151'),
+    ]
+
+    operations = [
+        migrations.AlterField(
+            model_name='terminatedemployees',
+            name='days_given',
+            field=models.PositiveIntegerField(blank=True, null=True),
+        ),
+    ]
Index: .idea/hr_system.iml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/hr_system.iml	(date 1558123693555)
+++ .idea/hr_system.iml	(date 1558123693555)
@@ -0,0 +1,39 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<module type="PYTHON_MODULE" version="4">
+  <component name="FacetManager">
+    <facet type="google-appengine-python" name="Google App Engine (Python)">
+      <configuration>
+        <option name="rootFolder" value="D:\projects-work-space\PycharmProjects\hr_system" />
+        <option name="sdkFolder" value="C:\Users\Arnold Kyeza\AppData\Local\Google\Cloud SDK\google-cloud-sdk\bin" />
+      </configuration>
+    </facet>
+    <facet type="django" name="Django">
+      <configuration>
+        <option name="rootFolder" value="$MODULE_DIR$" />
+        <option name="settingsModule" value="hr_system/settings.py" />
+        <option name="manageScript" value="$MODULE_DIR$/manage.py" />
+        <option name="environment" value="&lt;map/&gt;" />
+        <option name="doNotUseTestRunner" value="false" />
+        <option name="trackFilePattern" value="migrations" />
+      </configuration>
+    </facet>
+  </component>
+  <component name="NewModuleRootManager">
+    <content url="file://$MODULE_DIR$" />
+    <orderEntry type="inheritedJdk" />
+    <orderEntry type="sourceFolder" forTests="false" />
+    <orderEntry type="library" name="Django Lib" level="project" />
+    <orderEntry type="library" name="Google App Engine SDK" level="project" />
+  </component>
+  <component name="TemplatesService">
+    <option name="TEMPLATE_CONFIGURATION" value="Django" />
+    <option name="TEMPLATE_FOLDERS">
+      <list>
+        <option value="$MODULE_DIR$/Lib/site-packages/django/forms/templates" />
+      </list>
+    </option>
+  </component>
+  <component name="TestRunnerService">
+    <option name="PROJECT_TEST_RUNNER" value="Unittests" />
+  </component>
+</module>
\ No newline at end of file
Index: templates/payroll/bank_detail.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- templates/payroll/bank_detail.html	(revision b73526c914f345ee3ce99d5a8675497e6f47a709)
+++ templates/payroll/bank_detail.html	(date 1558128732465)
@@ -8,7 +8,7 @@
         Sort code: <p style="font-weight: bold">{{ object.sort_code }}</p>
         Description: <p style="font-weight: bold">{{ object.description }}</p>
         <a class="btn btn-success" href="{% url 'payroll:bank-list' %}">
-            BACK
+            CLOSE
         </a>
     </div>
 {% endblock content %}
\ No newline at end of file
Index: templates/base.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- templates/base.html	(revision b73526c914f345ee3ce99d5a8675497e6f47a709)
+++ templates/base.html	(date 1558100616941)
@@ -20,6 +20,9 @@
           integrity="sha384-fnmOCqbTlWIlj8LyTjo7mOUStjsKC4pOpQbqyi7RrhN7udi9RwhKkMHpvLbHG9Sr"
           crossorigin="anonymous">
 
+     <!-- XDSoft DateTimePicker -->
+  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/jquery-datetimepicker/2.5.20/jquery.datetimepicker.min.css" integrity="sha256-DOS9W6NR+NFe1fUhEE0PGKY/fubbUCnOfTje2JMDw3Y=" crossorigin="anonymous" />
+
     {% if title %}
         <title>Payroll System | {{ title }}</title>
     {% else %}
@@ -63,6 +66,7 @@
 <script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.1.36/pdfmake.min.js"></script>
 <script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.1.36/vfs_fonts.js"></script>
 <script type="text/javascript" src="https://cdn.datatables.net/v/bs4/jszip-2.5.0/dt-1.10.18/af-2.3.3/b-1.5.6/b-colvis-1.5.6/b-html5-1.5.6/b-print-1.5.6/cr-1.5.0/kt-2.5.0/r-2.2.2/rg-1.1.0/rr-1.2.4/sl-1.3.0/datatables.min.js"></script>
+<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-datetimepicker/2.5.20/jquery.datetimepicker.full.min.js" integrity="sha256-FEqEelWI3WouFOo2VWP/uJfs1y8KJ++FLh2Lbqc8SJk=" crossorigin="anonymous"></script>
 {% block scripts %}{% endblock %}
 </body>
 </html>
\ No newline at end of file
Index: users/migrations/0007_auto_20190518_0217.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- users/migrations/0007_auto_20190518_0217.py	(date 1558135047060)
+++ users/migrations/0007_auto_20190518_0217.py	(date 1558135047060)
@@ -0,0 +1,23 @@
+# Generated by Django 2.2 on 2019-05-17 23:17
+
+from django.db import migrations, models
+import django.db.models.deletion
+
+
+class Migration(migrations.Migration):
+
+    dependencies = [
+        ('users', '0006_auto_20190518_0151'),
+    ]
+
+    operations = [
+        migrations.RemoveField(
+            model_name='terminatedemployees',
+            name='id',
+        ),
+        migrations.AlterField(
+            model_name='terminatedemployees',
+            name='employee',
+            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='users.Employee'),
+        ),
+    ]
Index: users/migrations/0008_auto_20190518_0218.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- users/migrations/0008_auto_20190518_0218.py	(date 1558135130919)
+++ users/migrations/0008_auto_20190518_0218.py	(date 1558135130919)
@@ -0,0 +1,19 @@
+# Generated by Django 2.2 on 2019-05-17 23:18
+
+from django.db import migrations, models
+import django.db.models.deletion
+
+
+class Migration(migrations.Migration):
+
+    dependencies = [
+        ('users', '0007_auto_20190518_0217'),
+    ]
+
+    operations = [
+        migrations.AlterField(
+            model_name='terminatedemployees',
+            name='employee',
+            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='users.Employee'),
+        ),
+    ]
Index: templates/users/register.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- templates/users/register.html	(revision b73526c914f345ee3ce99d5a8675497e6f47a709)
+++ templates/users/register.html	(date 1558129605382)
@@ -106,10 +106,13 @@
                                     </div>
                                 </div>
                                 <div class="form-row">
-                                    <div class="form-group col-md-6 mb-0">
+                                    <div class="form-group col-md-4 mb-0">
+                                        {{ profile_creation_form.home_address|as_crispy_field }}
+                                    </div>
+                                    <div class="form-group col-md-4 mb-0">
                                         {{ profile_creation_form.residential_address|as_crispy_field }}
                                     </div>
-                                    <div class="form-group col-md-6 mb-0">
+                                    <div class="form-group col-md-4 mb-0">
                                         {{ profile_creation_form.district|as_crispy_field }}
                                     </div>
                                 </div>
@@ -126,20 +129,26 @@
                                     </div>
                                 </div>
                                 <div class="form-row">
-                                    <div class="form-group col-md-6 mb-0">
+                                    <div class="form-group col-md-4 mb-0">
                                         {{ profile_creation_form.department|as_crispy_field }}
                                     </div>
-                                    <div class="form-group col-md-6 mb-0">
+                                    <div class="form-group col-md-4 mb-0">
                                         {{ profile_creation_form.job_title|as_crispy_field }}
+                                    </div>
+                                    <div class="form-group col-md-4 mb-0">
+                                        {{ profile_creation_form.reports_to|as_crispy_field }}
                                     </div>
                                 </div>
                                 <div class="form-row">
-                                    <div class="form-group col-md-6 mb-0">
+                                    <div class="form-group col-md-4 mb-0">
                                         {{ profile_creation_form.appointment_date|as_crispy_field }}
                                     </div>
-                                    <div class="form-group col-md-6 mb-0">
+                                    <div class="form-group col-md-4 mb-0">
                                         {{ profile_creation_form.contract_type|as_crispy_field }}
                                     </div>
+                                    <div class="form-group col-md-4 mb-0">
+                                        {{ profile_creation_form.contract_expiry|as_crispy_field }}
+                                    </div>
                                 </div>
                                 <div class="form-row">
                                     <div class="form-group col-md-6 mb-0">
@@ -177,9 +186,6 @@
                                 </div>
                                 <div class="form-row">
                                     <div class="form-group col-md-6 mb-0">
-                                        {{ profile_creation_form.project|as_crispy_field }}
-                                    </div>
-                                    <div class="form-group col-md-6 mb-0">
                                         {{ profile_creation_form.agresso_number|as_crispy_field }}
                                     </div>
                                 </div>
@@ -266,10 +272,6 @@
 {% endblock content %}
 {% block scripts %}
     <script>
-
-        appointment_date = document.getElementById("id_appointment_date");
-        appointment_date.value = new Date();
-
         first = document.getElementById("id_first_name");
         last = document.getElementById("id_last_name");
 
@@ -310,8 +312,16 @@
             }
         });
 
-        console.log(b1.value);
-        console.log(b2.value);
-
+        $(function () {
+            $("#id_date_of_birth").datetimepicker({
+                format: 'Y-m-d',
+            });
+            $("#id_appointment_date").datetimepicker({
+                format: 'Y-m-d',
+            });
+            $("#id_contract_expiry").datetimepicker({
+                format: 'Y-m-d',
+            });
+        });
     </script>
 {% endblock scripts %}
\ No newline at end of file
Index: templates/users/profile.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- templates/users/profile.html	(revision b73526c914f345ee3ce99d5a8675497e6f47a709)
+++ templates/users/profile.html	(date 1558129605502)
@@ -115,10 +115,13 @@
                                     </div>
                                 </div>
                                 <div class="form-row">
-                                    <div class="form-group col-md-6 mb-0">
+                                    <div class="form-group col-md-4 mb-0">
+                                        {{ profile_update_form.home_address|as_crispy_field }}
+                                    </div>
+                                    <div class="form-group col-md-4 mb-0">
                                         {{ profile_update_form.residential_address|as_crispy_field }}
                                     </div>
-                                    <div class="form-group col-md-6 mb-0">
+                                    <div class="form-group col-md-4 mb-0">
                                         {{ profile_update_form.district|as_crispy_field }}
                                     </div>
                                 </div>
@@ -135,20 +138,26 @@
                                     </div>
                                 </div>
                                 <div class="form-row">
-                                    <div class="form-group col-md-6 mb-0">
+                                    <div class="form-group col-md-4 mb-0">
                                         {{ profile_update_form.department|as_crispy_field }}
                                     </div>
-                                    <div class="form-group col-md-6 mb-0">
+                                    <div class="form-group col-md-4 mb-0">
                                         {{ profile_update_form.job_title|as_crispy_field }}
+                                    </div>
+                                    <div class="form-group col-md-4 mb-0">
+                                        {{ profile_update_form.reports_to|as_crispy_field }}
                                     </div>
                                 </div>
                                 <div class="form-row">
-                                    <div class="form-group col-md-6 mb-0">
+                                    <div class="form-group col-md-4 mb-0">
                                         {{ profile_update_form.appointment_date|as_crispy_field }}
                                     </div>
-                                    <div class="form-group col-md-6 mb-0">
+                                    <div class="form-group col-md-4 mb-0">
                                         {{ profile_update_form.contract_type|as_crispy_field }}
                                     </div>
+                                    <div class="form-group col-md-4 mb-0">
+                                        {{ profile_update_form.contract_expiry|as_crispy_field }}
+                                    </div>
                                 </div>
                                 <div class="form-row">
                                     <div class="form-group col-md-6 mb-0">
@@ -184,11 +193,8 @@
                                         {{ profile_update_form.social_security_number|as_crispy_field }}
                                     </div>
                                 </div>
-                                 <div class="form-row">
+                                <div class="form-row">
                                     <div class="form-group col-md-6 mb-0">
-                                        {{ profile_update_form.project|as_crispy_field }}
-                                    </div>
-                                    <div class="form-group col-md-6 mb-0">
                                         {{ profile_update_form.agresso_number|as_crispy_field }}
                                     </div>
                                 </div>
@@ -292,17 +298,26 @@
 
         b1.addEventListener("keyup", function () {
             if (b1.value <= 100) {
-                 b2.value = 100 - b1.value
+                b2.value = 100 - b1.value
             }
         });
 
         b2.addEventListener("keyup", function () {
             if (b2.value <= 100) {
-                 b1.value = 100 - b2.value
+                b1.value = 100 - b2.value
             }
         });
 
-        console.log(b1.value);
-        console.log(b2.value);
+        $(function () {
+            $("#id_date_of_birth").datetimepicker({
+                format: 'Y-m-d',
+            });
+            $("#id_appointment_date").datetimepicker({
+                format: 'Y-m-d',
+            });
+            $("#id_contract_expiry").datetimepicker({
+                format: 'Y-m-d',
+            });
+        });
     </script>
 {% endblock scripts %}
\ No newline at end of file
Index: templates/support_data/organization_list.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- templates/support_data/organization_list.html	(revision b73526c914f345ee3ce99d5a8675497e6f47a709)
+++ templates/support_data/organization_list.html	(date 1558128553985)
@@ -4,6 +4,11 @@
 {% block content %}
     <div class="content-section">
         <h4 class="border-bottom mb-4">Organizations</h4>
+        <div class="d-flex flex-row-reverse">
+            <div class="p-2">
+                <a class="btn btn-success btn-md" href="{% url 'support_data:organization-create' %}">Create</a>
+            </div>
+        </div>
         <div class="table-responsive">
             <table id="table_id" class="table table-sm table-striped table-bordered w-100">
                 <caption class="border-bottom mb-4">Organizations</caption>
Index: reports/views.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- reports/views.py	(revision b73526c914f345ee3ce99d5a8675497e6f47a709)
+++ reports/views.py	(date 1558135758748)
@@ -61,7 +61,7 @@
     cat_d = processors.filter(earning_and_deductions_category=2).all()
     cat_s = processors.filter(earning_and_deductions_category=3).all()
 
-    extra_data = ExTraSummaryReportInfo.objects.filter(key=f'{payroll_period.payroll_key}S{employee.id}').first()
+    extra_data = ExTraSummaryReportInfo.objects.filter(key=f'{payroll_period.payroll_key}S{employee.pk}').first()
 
     # creating initial data for formsets
     e_data = [processor.to_dict() for processor in cat_e]
@@ -186,7 +186,7 @@
     employee = get_object_or_404(Employee, pk=user)
     data = PayrollProcessors.objects.filter(payroll_period=period).filter(employee=employee)
     report = 'Pay Slip'
-    info_key = f'{period.payroll_key}S{employee.id}'
+    info_key = f'{period.payroll_key}S{employee.pk}'
     user_reports = ExTraSummaryReportInfo.objects.filter(key=info_key).all()
 
     context = {
@@ -211,7 +211,7 @@
         emails = []
         for employee in employees:
             data = PayrollProcessors.objects.filter(payroll_period=payroll_period).filter(employee=employee)
-            info_key = f'{payroll_period.payroll_key}S{employee.id}'
+            info_key = f'{payroll_period.payroll_key}S{employee.pk}'
             user_reports = ExTraSummaryReportInfo.objects.filter(key=info_key).all()
             context = {
                 'report': 'PaySlip',
